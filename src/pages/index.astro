---
import { getCollection, type CollectionEntry } from "astro:content";

import Layout from "../layouts/Layout.astro";
import Details from "../components/Details.astro";
import CodeBlock from "../components/CodeBlock.astro";
import ProjectCard from "../components/ProjectCard.astro";

import pgpKey from "../../public/pgp.txt?raw";

const projects = (await getCollection(
	"projects",
)) as CollectionEntry<"projects">[];
---

<Layout title="Home">
	<h1>Hey, I'm <span class="hero-name">Joe</span></h1>

	<p>
		I'm a Software & DevOps Engineer based in the UK, and a Fellow of the
		Python Software Foundation.
	</p>

	<p>
		I'm passionate about open-source software, automation, and building
		communities. I'm always looking for new and exciting projects to work
		on. I'm interested in a wide range of technologies, but I have a
		particular fondness for Python, Kubernetes, and Ansible. I also am
		interested in the nitty-gritty of how the internet works, and have a
		particular fondness for DNS and BGP.
	</p>

	<p>
		I work primarily in Python, but am also happy working in
		JavaScript/TypeScript, Elixir, Golang or Erlang.
	</p>

	<p>
		I'm co-founder of <a href="https://pythondiscord.com/">Python Discord</a
		>, one of the largest programming communities on the planet with over
		380,000 members. I also undertake the role of DevOps Lead for the
		community, maintaining our Kubernetes and Ansible based infrastructure.
	</p>

	<p>
		I am also the administrator of the hobbyist <a href="/as211224"
			>AS211224</a
		> network, a small, IPv6-only network that I use to experiment with BGP and
		other networking technologies.
	</p>

	<p>
		I'm best contacted via email, at <a href="mailto:joe@jb3.dev"
			>joe@jb3.dev</a
		>, preferably encrypted with the below PGP key.
	</p>

	<Details summary="PGP Key" emoji={"\u{1F511}"}>
		<p>
			You can fetch the below key from <a href="/pgp.txt"
				><code>https://jb3.dev/pgp.txt</code></a
			> or copy the below public key block into your PGP client of choice.
		</p>
		<CodeBlock>{pgpKey}</CodeBlock>
	</Details>

	<h2>Projects</h2>

	<div class="projectsHolder">
		{projects.map((project: any) => <ProjectCard project={project} />)}
	</div>
</Layout>

<style>
	.hero-name {
		animation: nameAnimation 5s infinite;
	}

	@keyframes nameAnimation {
		0% {
			color: #ec6f6f;
		}

		25% {
			color: #c596db;
		}

		50% {
			color: #84ad5e;
		}

		75% {
			color: #7ddce9;
		}

		100% {
			color: #ec6f6f;
		}
	}

	.projectsHolder {
		display: grid;
		gap: 20px;
		grid-template-columns: repeat(
			auto-fit,
			minmax(min(100%/1, max(300px, 100%/3)), 1fr)
		);
	}

	code {
		background-color: #f4f4f4;
		padding: 0.5em;
		border-radius: 5px;
	}

	@media (prefers-color-scheme: dark) {
		code {
			background-color: #333;
		}
	}
</style>
